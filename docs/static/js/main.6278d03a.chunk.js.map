{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/ItemGridGif.js","components/GridGif.js","hooks/useFechGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","ItemGridGif","className","src","alt","GridGif","loading","state","setState","useEffect","then","imgs","useFechGifs","img","key","App","ReactDOM","render","document","getElementById"],"mappings":"6MAsCeA,EAnCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAoBzC,OACI,0BAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,KAIlBO,QAAQC,IAAI,kBAKR,2BACIC,KAAK,OACLC,MAAQX,EACRY,SArBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCWLO,EATK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAC/B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCyBFO,EA3BC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDT,SAAEA,GAAe,IAAD,EACbhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHhC,QAAQC,IAAK+B,GACbH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDd0BK,CAAa1B,GAAjCa,EAFmB,EAExBN,KAAaa,EAFW,EAEXA,QAOrB,OACQ,oCACI,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,cACb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAkB,GAAG,OACX,kBAAC,EAAD,eACIC,IAAMD,EAAIhB,IACLgB,UEUtBE,EA5BH,WAAM,MAGsB7C,mBAAS,CAAE,WAHjC,mBAGPQ,EAHO,KAGKT,EAHL,KAOd,OACI,oCACI,6CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,4BAEQS,EAAWiB,KAAK,SAACT,GAAD,OACZ,kBAAC,EAAD,CACI4B,IAAM5B,EACNA,SAAWA,UCjBvC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6278d03a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault(); //para que no recargue en el submit\r\n\r\n        if( inputValue.trim().length > 2 ){ //el el trim elimina los espacios en blanco\r\n            setCategories( categories => [ inputValue, ...categories ] );\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n        console.log('submit hecho');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=oHI05IrzmdYRo7wpcRdt2eJ4CHU05DcN`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url,\r\n        }\r\n    } );\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst ItemGridGif = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemGridGif\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport ItemGridGif from './ItemGridGif';\r\n\r\nconst GridGif = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFechGifs( category );\r\n    \r\n    // useEffect( () => { //el useEffect ejecuta el codigo dentro una unica vez cuando el componente es renderizado por primera ves\r\n    //     getGifs( category )\r\n    //         .then( setImages );\r\n    // }, [ category ])  \r\n\r\n    return (\r\n            <>\r\n                <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n                { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n                <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <ItemGridGif\r\n                                key={ img.id } \r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default GridGif\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFechGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [], \r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                console.log( imgs );\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })    \r\n            } )\r\n    }, [ category ] )\r\n\r\n    return state; //el state es la { data:[], loading:true }\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GridGif from './components/GridGif';\r\n\r\nconst App = () => {\r\n\r\n    // const categories = [ 'One Punch', 'Dragon Bal', 'One Piece' ];\r\n    const [categories, setCategories] = useState([ 'Minato']);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>App GifExpert</h2>\r\n            <hr/>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GridGif \r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}